# 자바의 기본 데이터 타입(자료형)
* 데이터 타입은 변수가 저장할 수 있는 값의 종류를 결정한다.
* 변수를 생성할 때는 반드시 그 변수가 저장할 수 있는 값의 종류를 지정하여야 한다.
* 자바의 기본 데이터 타입은 **정수형, 실수형, 문자형, 논리형**이 있다.

## 자바의 기본 데이터 타입의 종류

Type | Keyword | Size | Default value | Range
---- | ------- | ---- | ------------- | -----
논리형 | boolean | 1 byte | false | true, false
정수형 | byte | 1 byte | 0 | -128 ~ 127
정수형 | short | 2 byte | 0 | -32,768 ~ 32,767
정수형 | **int (기본)** | **4 byte** | 0 | -2,147,483,648 ~ 2,147,483,647
정수형 | long | 8 byte | 0L | -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807
실수형 | float | 4 byte | 0.0F | 3.4 X 10<sup>−38</sup> ~ 3.4 X 10<sup>38</sup> 의 근사값
실수형 | **double (기본)** | **8 byte** | 0 | 1.7 X 10<sup>−308</sup> ~ 1.7 X 10<sup>308</sup> 의 근사값
문자형 | char | 2 byte (유니코드) | '\u0000' | 0 ~ 65,535

## 정수형 타입의 유의사항
* 정수형 타입을 결정할 때, 사용하려는 데이터의 최소/최대 표현 범위를 고려해야 한다.
* 해당 타입이 표현현할 수 있는 표현 범위를 벗어난 데이터를 저장하면 오버플러우 또는 언더플로우가 발생해 엉뚱한 값이 저장된다.
  - 오버플러우 (overflow) : 해당 타입이 표현할 수 있는 '최대 표현 범위'보다 큰 수를 저장할 때 발생하는 현상
  - 언더플로우 (underflow) : 해당 타입이 표현할 수 있는 '최소 표현 범위'보다 작은 수를 저장할 때 발생하는 현상
* 일반적으로 정수는 int 타입의 변수를 사용한다.
* 통장 잔고와 같은 큰 금액은 long 타입의 변수를 사용한다.
* long의 범위를 초과하는 무한한 크기의 정수는 **BigInteger**를 사용하면 저장/연산을 수행할 수 있다.

## 실수형 타입의 유의사항
* 실수형 변수에 저장된 값으로 사칙연산을 수행하면 작은 오차가 발생할 수 있다.
* double의 범위를 초과하는 무한한 크기의 실수는 **BigDecimal**를 사용하면 저장/연산을 수행할 수 있다.
```java
double x = 0.1;
double y = 0.2;
double z = x + y;

System.out.println(z);  // 출력결과는 0.30000000000000004 으로 0.00000000000000004 만큼의 오차가 발생한다.
```
